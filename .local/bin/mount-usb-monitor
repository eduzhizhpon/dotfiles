#!/bin/bash

# Define environment file
ENV_FILE="/opt/env-files/usb-monitor.env"

# Define log file
LOG_FILE="/tmp/mount-usb-monitor.log"

running=true

TIMEOUT=30

# Check if environment file exists
if [ ! -f "$ENV_FILE" ]; then
    echo "$(date): Env file is missing in $ENV_FILE" >> "$LOG_FILE"
    exit 1
fi

# Source environment file
source "$ENV_FILE"

# Function to mount the device
mount_usb() {
    local uuid="$1"
    local mount_point="$2"

    # Ensure the mount point directory exists
    if [ ! -d "$mount_point" ]; then
        mkdir -p "$mount_point"
    fi

    # Check if already mounted
    if ! mount | grep -q "$mount_point"; then
        echo "$(date): Mounting $uuid at $mount_point" >> "$LOG_FILE"
        sudo /bin/mount "/dev/disk/by-uuid/$uuid" "$mount_point" >> "$LOG_FILE" 2>&1
        if [ $? -ne 0 ]; then
            echo "$(date): Mount failed for UUID $uuid at $mount_point" >> "$LOG_FILE"
        else
            echo "$(date): Mounted $uuid at $mount_point successfully" >> "$LOG_FILE"
        fi
    else
        echo "$(date): $mount_point is already mounted" >> "$LOG_FILE"
    fi
}

# Function to unmount the device
unmount_usb() {
    local mount_point="$1"

    if mount | grep -q "$mount_point"; then
        echo "$(date): Unmounting $mount_point" >> "$LOG_FILE"
        sudo /bin/umount -lf "$mount_point" >> "$LOG_FILE" 2>&1
        if [ $? -ne 0 ]; then
            echo "$(date): Unmount failed for $mount_point" >> "$LOG_FILE"
        else
            echo "$(date): Unmounted $mount_point successfully" >> "$LOG_FILE"
        fi
    else
        echo "$(date): $mount_point is not mounted" >> "$LOG_FILE"
    fi
}

terminate_script() {
    running=false
    echo "$(date): Received termination signal. Running=$running" >> "$LOG_FILE"
}

umount_all() {
    for i in "${!USB_UUIDS[@]}"; do
        uuid="${USB_UUIDS[$i]}"
        mount_point="${MOUNT_POINTS[$i]}"
        if [ ! -e "/dev/disk/by-uuid/$uuid" ]; then
            unmount_usb "$mount_point"
        fi
    done
    
}

trap terminate_script SIGTERM SIGINT

# Main logic
while "$running"; do
    for i in "${!USB_UUIDS[@]}"; do
        uuid="${USB_UUIDS[$i]}"
        mount_point="${MOUNT_POINTS[$i]}"
        if [ -e "/dev/disk/by-uuid/$uuid" ]; then
            mount_usb "$uuid" "$mount_point"
        else
            unmount_usb "$mount_point"
        fi
    done

    sleep "$TIMEOUT"
done

umount_all

echo "$(date): Finished" >> "$LOG_FILE"

exit 0
